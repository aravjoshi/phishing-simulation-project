
# /code/phishing_report_parser.py

import pandas as pd
import os

def parse_phishing_report(csv_path):
    """
    Parses a phishing report CSV and returns a summary dictionary.
    
    Args:
        csv_path (str): Path to the phishing_report.csv file.

    Returns:
        dict: Summary containing:
            - total_reports (int)
            - unique_senders (int)
            - unique_subjects (int)
            - phishing_percentage (float)
            - top_senders (DataFrame)
    """
    if not os.path.exists(csv_path):
        raise FileNotFoundError(f"File not found: {csv_path}")

    # Load CSV
    try:
        df = pd.read_csv(csv_path)
    except Exception as e:
        raise ValueError(f"Error reading CSV: {e}")

    required_columns = {"Sender", "Subject", "Is_Phishing"}
    if not required_columns.issubset(df.columns):
        raise ValueError(f"Missing required columns. Expected: {required_columns}")

    # Summary stats
    total_reports = len(df)
    unique_senders = df["Sender"].nunique()
    unique_subjects = df["Subject"].nunique()
    phishing_percentage = (df["Is_Phishing"].sum() / total_reports) * 100

    # Top senders by phishing count
    top_senders = (
        df[df["Is_Phishing"] == 1]["Sender"]
        .value_counts()
        .reset_index()
        .rename(columns={"index": "Sender", "Sender": "Phishing_Count"})
    )

    return {
        "total_reports": total_reports,
        "unique_senders": unique_senders,
        "unique_subjects": unique_subjects,
        "phishing_percentage": phishing_percentage,
        "top_senders": top_senders
    }


if __name__ == "__main__":
    csv_file = "../logs/phishing_report.csv"  # Adjust path if needed
    try:
        summary = parse_phishing_report(csv_file)
        print("\n--- Phishing Report Summary ---")
        print(f"Total Reports: {summary['total_reports']}")
        print(f"Unique Senders: {summary['unique_senders']}")
        print(f"Unique Subjects: {summary['unique_subjects']}")
        print(f"Phishing Percentage: {summary['phishing_percentage']:.2f}%\n")

        print("Top Phishing Senders:")
        print(summary['top_senders'].to_string(index=False))
    except Exception as e:
        print(f"Error: {e}")
